@model Publications.Models.ViewModels.SavePublicationVM

@{
    ViewData["Title"] = !Model.isExist ? "Dodaj publikację" : "Edytuj publikację";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool k = Model.isExist;
    string ButtonText = k ? "Edytuj publikację" : "Dodaj publikację do bazy";
    
}
<h3>
    <button class="btn btn-primary pull-right" type="button"
            onclick="location.href='@Url.Action("PublicationList")'">
        Lista publikacji
    </button>
</h3>

<form asp-action="AddPublication">
    <div class="container">
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <h5>Tytuł i dziedziny naukowe publikacji:</h5>
        <table class="table col-md-6">
            <tr>
                <th class="col-md-6">Tytuł:</th>
                <th class="col-md-6">Dziedziny:</th>
            </tr>            
            <tr>
                <td>
                    <label asp-for="Title" class="control-label hidden"></label>
                    <input asp-for="Title" class="form-control" id="Title" />
                    <span asp-validation-for="Title" class="text-danger" />
                </td>
                <td>
                    <table id="Branches">
                        <tbody>
                            @if (Model.isExist)
                            {
                                @foreach (var item in Model.BranchesOfKnowledge)
                                {
                                    @Html.Partial("BranchRow", item);
                                }
                            }
                            @Html.Partial("BranchRow", new Publications.Models.Entities.BranchOfKnowledge())
                            
                        </tbody>
                    </table>
                </td>
            </tr>
        </table>
        <hr />
        <div class="form-group">
            <h5>Autorzy publikacji:</h5>
            <table id="Authors" class="table">
                <thead>

                    <tr>
                        <th>
                            Stopień
                        </th>
                        <th>
                            Imię
                        </th>
                        <th>
                            Nazwisko
                        </th>
                        <th>

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.isExist)
                    {
                        @foreach (var item in Model.Authors)
                        {
                            @Html.Partial("AuthorRow", item);
                        }
                    }
                    @Html.Partial("AuthorRow", new Publications.Models.Entities.Author()) 
                </tbody>
            </table>
        </div>

        <hr />

        <h5>Wybierz szablon publikacji:</h5>
        <label asp-for="TemplateId" class="col-md-2 control-label hidden"></label>
        <div class="col-md-10" id="TemplateList">
        </div>



        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="@ButtonText" class="btn btn-success pull-right" id="Createbtn" />

            </div>
        </div>
    </div>
</form>



<script type="text/javascript">
    $(document).ready(function () {
        var True = true;
        var False = false;
        var isExist = @Model.isExist;
        $.ajax({
            url: "@Url.Action("ShowTemplatesList")",
            type: "GET",
            success: function (response) {
                $("#TemplateList").html(response);
                $('#PublicationTemplate').val(@Model.TemplateId);
                $('#PublicationTemplate').change();
                if (isExist) {
                    $('#PublicationTemplate').prop("disabled", true);
                }
            }
        });
        $.ajax({
            url: "@Url.Action("AuthorRow")",
            type: "GET",
            success: function (response) {
                $("#Authors").append(response);
            }
        });
        $.ajax({
            url: "@Url.Action("BranchRow")",
            type: "GET",
            success: function (response) {
                $("#Branches").append(response);
            }
        });
        
        
    });
    $("#Createbtn").click(function () {
        var data = collectPublicationData();
        $.ajax({
            type: "POST",
            url: "@Url.Action("Add")",
            contentType: false,
            processData: false,
            data: data,
            success: function (message) {
                $("#TemplateList").html(message)
                bootbox.alert("Dodano publikację do bazy");
            }
        });
        return false;
    });
    function collectPublicationData() {
        var FieldsValue = [];
        var files = [];
        $("#publications tbody tr").each(function (i, v) {
            //var data = ;
            if ($(v).find(".fieldvalue").prop("type") == "file") {
                var file = $(v).find(".fieldvalue").get(0).files[0];
                if (file != null) {
                    files.push({
                        Name: $(v).find(".fieldname").html(),
                        File: file
                    });
                }
            }
            else
            {
                var fieldValue = {
                    FieldType: $(v).find(".fieldtype").html(),
                    Name: $(v).find(".fieldname").html(),
                    Value: $(v).find(".fieldvalue").val(),
                    isChecked: $(v).find(".fieldvalue").is(":checked"),
                    //FileInformation: data
                };
                FieldsValue.push(fieldValue);
            }
        });


        var Authors = [];
        $("#Authors tbody tr").each(function (i, v) {
            if ($(v).find(".firstname").val() != "") {
                var author = {
                    AcademicDegree: $(v).find(".degree").val(),
                    FirstName: $(v).find(".firstname").val(),
                    SecondName: $(v).find(".secondname").val()
                };
                Authors.push(author);
            }
        });
        var BranchesOfKnowledge = [];
        $("#Branches tbody tr").each(function (i, v) {
            if ($(v).find(".name").val() != "") {
                var branch = {
                    Name: $(v).find(".name").val(),
                };
                BranchesOfKnowledge.push(branch);
            }
        });
        var PublicationVM = {
            BranchesOfKnowledge: BranchesOfKnowledge,
            Authors: Authors,
            FieldsValue: FieldsValue,
            Title: $("#Title").val(),
            TemplateId: $("#PublicationTemplate").val()
        };

        var form = new FormData();
        form.append("BranchesOfKnowledge", JSON.stringify(BranchesOfKnowledge));
        form.append("Authors", JSON.stringify(Authors));
        form.append("FieldsValue", JSON.stringify(FieldsValue));
        form.append("Title", PublicationVM.Title);
        form.append("TemplateId", PublicationVM.TemplateId);
        $(files).each(function (i, fileInfo) {
            form.append(fileInfo.Name, fileInfo.File)

        });
        //cosnole.log(files);
        /*        for (var pair of form.entries()) {
                    console.log(pair[0] + ', ' + pair[1]);
                }*/
        //return PublicationVM;
        return form;
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
