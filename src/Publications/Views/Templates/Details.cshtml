@model Publications.Models.ViewModels.TemplateVM

@{
    string title = ViewBag.IsNewTemplate ? "Nowy szablon" : "Edycja szablonu";
    ViewData["Title"] = title;
}

<div class="row">
    <div class="col-sm-4">
        <h3>@title</h3>
    </div>
    <div class="col-sm-8">
        <div class="pull-right">
            <button class="btn btn-primary " id="btnSave" style="margin-top:20px;"><span class="glyphicon glyphicon-save"></span> Zapisz</button>
            <button class="btn btn-danger " style="margin-top:20px;">Anuluj</button>
        </div>
    </div>
</div>
<br />
<div class="row alertContainer" hidden>
    <div class="alert col-sm-12">
        <strong id="saveStatus"></strong>
    </div>
</div>

<div>
    <form class="form-horizontal">
        <input asp-for="TemplateId" id="templateId" hidden/>
        <div class="form-group">
            <div class="col-sm-1">
                <label class="control-label">Nazwa:</label>
            </div>
            <div class="col-sm-10">
                <input asp-for="Name" class="form-control" style="width:300px;" id="templateName" />
                <span class="help-block">Pole wymagane.</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-1">
                <label class="control-label">Opis:</label>
            </div>
            <div class="col-sm-10">
                <textarea asp-for="Description" class="form-control" style="width:300px;" id="templateDescription" rows="4"></textarea>
                <span class="help-block"></span>
            </div>
        </div>

        
    </form>
</div>
<br />
<div class="row">
    <div class="alert alert-info col-sm-12">
        <span class="glyphicon glyphicon-info-sign"></span><strong> Kazdy szablon zawiera domyslnie takie pola jak nazwa, autorzy, wersja elektroniczna.</strong>
    </div>
</div>
<div class="row">
    <div class="col-sm-4">
        <h3>Pozostale pola szablonu</h3>
    </div>
    <div class="col-sm-8">
        <div class="pull-right">
            <button class="btn btn-success" style="width:180px; margin-top:20px;" id="addField"><span class="glyphicon glyphicon-plus"></span> Dodaj istniejace pole</button>
            <button class="btn btn-info " style="width:180px; margin-top:20px;"  id="addNewFieldModal"><span class="glyphicon glyphicon-plus"> </span> Dodaj nowe pole</button>
        </div>
    </div>
</div>
<br />

<div class="row fieldsList">
    <div class="col-sm-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th class="col-sm-1">#</th>
                    <th class="col-sm-5">Typ</th>
                    <th class="col-sm-5">Nazwa</th>
                    <th class="col-sm-1"></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var field in Model.Fields)
                {
                    Html.RenderPartial("TemplateRow", field);
                }
            </tbody>
        </table>
    </div>
</div>

<div id="addModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="closeModal" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Stworz nowe pole.</h4>
            </div>
            <div class="modal-body">
                <div class="addFieldAlert" hidden>
                    <div class="alert">
                        <strong id="addFieldAlertText"></strong>
                    </div>
                </div>
                <form class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="control-label">Typ:</label>
                        </div>
                        <div class="col-sm-10">
                            <select asp-items="Html.GetEnumSelectList<FieldType>()" class="form-control" id="newFieldType"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            <label class="control-label">Nazwa:</label>
                        </div>
                        <div class="col-sm-10">
                            <input class="form-control" id="newFieldName" maxlength="20" />
                            <span class="help-block">Pole wymagane. Max 20 znakow.</span>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnAddField" class="btn btn-success">Dodaj</button>
                <button type="button" class="btn btn-warning" data-dismiss="modal">Anuluj</button>
            </div>
        </div>

    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        renumerateTableRows();
    })

    $("#addField").click(function () {
        $.ajax({
            url: "@Url.Action("AddField")",
            type: "GET",
            success: function (response) {
                $("tbody").append(response);
                renumerateTableRows();
            }
        });
    });

    $(".fieldsList").on("change", ".fieldType", function () {
        var type = $(this).val();
        var url = "/Templates/GetFieldsByType?type=" + type;
        var select = $(this);
        $.ajax({
            url: url,
            type: "GET",
            success: function (response) {
                $(select).parents("tr").find(".fieldsSelect").html(response);
            }
        });
    });

    $(".fieldsList").on("click", ".removeField", function () {
        $(this).closest("tr").remove();
        renumerateTableRows();
    });

    $("#btnSave").click(function () {
        var data = collectTemplateData();
        //console.log(data);
        $.ajax({
            url: "@Url.Action("Save")",
            type: "POST",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                //console.log(response);
                var msg = response.message;
                if (response.success) {
                    $(".alertContainer .alert").addClass("alert-success");
                    $(".alertContainer .alert").removeClass("alert-danger");

                } else {
                    $(".alertContainer .alert").removeClass("alert-success");
                    $(".alertContainer .alert").addClass("alert-danger");
                }
                $("#saveStatus").text(msg);
                $(".alertContainer").show();
            }
        });
    });

    function collectTemplateData() {
        var fields = [];
        $(".fieldsList tbody tr").each(function (i, v) {
            var field = {
                AttachId: $(v).find(".attachId").val(),
                FieldId: $(v).find(".fieldId").val()
            };
            fields.push(field);
        });
        var saveVM = {
            TemplateId: $("#templateId").val(),
            Description: $("#templateDescription").val(),
            Name: $("#templateName").val(),
            Fields: fields
        };

        return saveVM;

    }

    $("#btnAddField").click(function () {
        //$("#addModal").modal('hide');
        var vm = {
            Type: $("#newFieldType").val(),
            Name: $("#newFieldName").val()
        }
        $.ajax({
            url: "@Url.Action("AddNewField")",
            data: JSON.stringify(vm),
            contentType: "application/json; charset=utf-8",
            //dataType: "json",
            type: "POST",
            success: function (response) {

                $("tbody").append(response);
                var newSelect = $($(response)).find(".fieldId");
                //console.log(newSelect.val());
                refreshSelects(newSelect, vm.Type);
                renumerateTableRows();
                $('#addModal').modal('toggle');
                //$('#addModal').hide();
                $('.modal-backdrop').hide();
            },
            error: function (response) {
                $(".addFieldAlert .alert").addClass("alert-danger");
                $("#addFieldAlertText").text(response.responseText);
                $(".addFieldAlert").show();
            }
        });
        //return false;

    })

    $("#addNewFieldModal").click(function () {
        
        $('#addModal').modal('toggle');
        $(".addFieldAlert").hide();
    });

    function refreshSelects(newSelect, newFieldType) {
        $(".fieldType").each(function (i, v) {
            var currType = $(v).val();
            if (currType == newFieldType) {
                var currValue = $(v).parents("tr").find(".fieldId").val();
                console.log($(newSelect));
                $(v).parents("tr").find(".fieldId").replaceWith($(newSelect).clone());
                $(v).parents("tr").find(".fieldId").val(currValue);
            }
        });

    }
</script>